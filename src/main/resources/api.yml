openapi: 3.0.0
info:
  contact:
    email: randakar@gmail.com
  description: Authenticare banking cares for your authentic experience!
  license:
    name: The GNU General Public License v3.0
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  termsOfService: https://authenticare-bank.com/terms
  title: AuthentiCare Bank
  version: 0.0.1
externalDocs:
  description: Find this on github!
  url: https://github.com/randakar/AuthentiCareBankApi
servers:
  - url: /
tags:
  - description: Operations on accounts
    name: account
  - description: Operations on customers
    name: customer
  - description: Money transfer
    name: transaction
paths:
  /customer/me:
    get:
      operationId: getCurrentCustomer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
          description: successful operation
        404:
          content: {}
          description: Customer not found
      summary: Get my own customer details
      tags:
        - customer
      x-accepts: application/json
  /customer/{id}:
    get:
      operationId: getCustomerById
      parameters:
        - description: 'The id of the customer that needs to be fetched. '
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: integer
          style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
          description: successful operation
        404:
          content: {}
          description: Customer not found
      summary: Get customer by id
      tags:
        - customer
      x-accepts: application/json
components:
  schemas:
    CustomerDto:
      example:
        id: 0
        email: email@rabobank.nl
        firstName: Fooman
        lastName: Barname
      properties:
        id:
          format: int64
          type: integer
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
        - id
      type: object
    currencyCode:
      type: string
      description: 3 letter currency code as defined by ISO-4217
      pattern: "[A-Z]{3}"
      format: iso-4217
      example: EUR
    MoneyDto:
      type: object
      properties:
        amount:
          type: number
          description: Amount expressed as a decimal number of major currency units
          format: decimal
          example: 99.95
        currency:
          $ref: '#/components/schemas/currencyCode'
      required:
        - amount
        - currency
    iban:
      type: string
      pattern: '[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}'
      example: 'NL20INGB0001234567'
    AccountDto:
      example:
        id: 0
        iban: 'NL20INGB0001234567'
        owner: 0
        name: "DeBetaalRekening"
        description: 'Mijn Eerste Rekening!'
      properties:
        id:
          format: int64
          type: integer
        iban:
          $ref: '#/components/schemas/iban'
        owner:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        balance:
          $ref: '#/components/schemas/MoneyDto'
    TransactionDto:
      properties:
        id:
          format: int64
          type: integer
        timestamp:
          type: string
          format: date-time
        from:
          $ref: '#/components/schemas/iban'
        to:
          $ref: '#/components/schemas/iban'
        amount:
          $ref: '#/components/schemas/MoneyDto'
        description:
          type: string
    Error:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
        - code
        - message
      type: object
